type ImportInput = string;
type Module = string;
type UsedIdentifier = string;
type ImportInfo = Readonly<{
    importedIdentifier: string;
    isType: boolean;
    usedIdentifier: UsedIdentifier;
}>;
export type ImportMap = ReadonlyMap<Module, ReadonlyMap<UsedIdentifier, ImportInfo>>;
export declare function createImportMap(): ImportMap;
export declare function parseImportInput(input: ImportInput): ImportInfo;
export declare function addToImportMap(importMap: ImportMap, module: Module, imports: ImportInput[]): ImportMap;
export declare function removeFromImportMap(importMap: ImportMap, module: Module, usedIdentifiers: UsedIdentifier[]): ImportMap;
export declare function mergeImportMaps(importMaps: ImportMap[]): ImportMap;
export declare function importMapToString(importMap: ImportMap, dependencyMap?: Record<string, string>, useGranularImports?: boolean): string;
export {};
//# sourceMappingURL=importMap.d.ts.map